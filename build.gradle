plugins {
    id("org.springframework.boot") version "3.2.2"
    id("io.spring.dependency-management") version "1.1.4"
    id("org.liquibase.gradle") version "2.2.0"
    id 'java'
    id 'application'
}

group = "ru.pet.ms.warehouse"
version = "1.0-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.liquibase:liquibase-core")
    runtimeOnly("org.postgresql:postgresql")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
    implementation("io.hypersistence:hypersistence-utils-hibernate-60:3.7.0")
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


    // Liquibase
    implementation("org.liquibase:liquibase-core:4.23.1")

    // JPA
    implementation("jakarta.persistence:jakarta.persistence-api:3.1.0")

    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.34")
    annotationProcessor("org.projectlombok:lombok:1.18.34")

    // ModelMapper
    implementation("org.modelmapper:modelmapper:3.1.1")

    // PostgreSQL
    implementation("org.postgresql:postgresql:42.7.1")

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'


    // JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.2")

//    liquibaseRuntime('org.liquibase:liquibase-core:4.23.1')
//    liquibaseRuntime('info.picocli:picocli:4.7.5')
//    liquibaseRuntime('org.postgresql:postgresql:42.7.1')
}

//processResources {
//    from('src/main/resources')
//}


test {
    useJUnitPlatform() // обязательно для JUnit 5
}


tasks.named('bootJar') {
    mainClass = 'backend.WarehouseApplication'
}

tasks.named('bootRun') {
    mainClass = 'backend.WarehouseApplication'
}

application {
    mainClass = 'backend.WarehouseApplication'
}



